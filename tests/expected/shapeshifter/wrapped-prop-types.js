/* Automatically generated by shapeshifter. Do not modify! */
/* eslint-disable */

import PropTypes from 'prop-types';

export const KeyShape = PropTypes.oneOfType([
  PropTypes.string.isRequired,
  PropTypes.number.isRequired,
]);

export const MultipleChildrenShape = (process.env.NODE_ENV === 'production') ? PropTypes.any : PropTypes.shape({
  uuid: PropTypes.string,
});

export const SingleChildShape = (process.env.NODE_ENV === 'production') ? PropTypes.any : PropTypes.shape({
  id: PropTypes.number,
  active: PropTypes.bool,
  self: (...args) => SingleChildShape(...args),
});

export const ParentShape = (process.env.NODE_ENV === 'production') ? PropTypes.any : PropTypes.shape({
  id: PropTypes.number,
  name: PropTypes.string,
  children: PropTypes.arrayOf(MultipleChildrenShape),
  orphan: SingleChildShape,
  polymorph: PropTypes.oneOfType([
    SingleChildShape.isRequired,
    MultipleChildrenShape.isRequired,
  ]),
  polymorph_fk: KeyShape,
  polymorph_type: PropTypes.string,
});
